@model IEnumerable<Charity.Web.Areas.Administration.Models.RecipientListViewModel>
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Index";
    var pagedlist = (IPagedList)Model;
}

<h3>Recipients list</h3>

@using (Html.BeginForm("Index", "Recipients", FormMethod.Get))
{
    <div class="input-group">
        <span class="input-group-addon">
            <span class="glyphicon glyphicon-search"></span>
        </span>

        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })

        <span class="input-group-btn pull-left">
            <button class="btn btn-default" type="submit">Search</button>
        </span>
    </div>
}

<div class="table-list">
    <table class="table" id="recipients-list">
        <tr>
            <th>
                @Html.ActionLink("Organization Name", "Index",
                    new { sortOrder = ViewBag.OrganizationNameSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>

            <th>
                @Html.ActionLink("Recipient Type", "Index",
                    new { sortOrder = ViewBag.RecipientTypeSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CityName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
            </th>
        </tr>

        @foreach (var recipient in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => recipient.OrganizationName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => recipient.RecipientType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => recipient.ContactName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => recipient.CityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => recipient.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => recipient.PhoneNumber)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { username = recipient.UserName }, null) |
                    @*@Html.ActionLink("Edit", "Edit", new { id = donor.Id }) |*@
                    @Html.ActionLink("Details", "Details", new { username = recipient.UserName }, null) |
                    @*@Html.ActionLink("Details", "Details", new { id = donor.Id }) |*@
                </td>
            </tr>
        }
    </table>
</div>

<br />
Page @(pagedlist.PageCount < pagedlist.PageNumber ? 0 : pagedlist.PageNumber) of @pagedlist.PageCount

@Html.PagedListPager((IPagedList)Model,
    page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))